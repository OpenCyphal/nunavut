#
# We test nunavut using python 3.5 - 3.8.
#
# The standard version to develop against is 3.7. We limit mypy checking
# to 3.7 since typing is still a bit fluid accross versions.
#
[tox]
envlist = {py35,py36,py37,py38}-{test,nnvg,doctest},noyaml,lint,mypy,report,docs,package


[base]
deps =
    Sybil
    pytest
    pytest-timeout
    pydsdl
    coverage


[dev]
deps =
    pyyaml
    autopep8
    rope
    isort

# +---------------------------------------------------------------------------+
# | CONFIGURATION
# +---------------------------------------------------------------------------+


[flake8]
max-complexity = 10
max-line-length = 120
doctests = True
statistics = True
show-source = True


[pytest]
log_cli = true
log_cli_level = WARNING
norecursedirs = submodules


[coverage:run]
branch=True
parallel=True
include =
    src/nunavut/*
    .tox/*/site-packages/nunavut/*

omit = 
    */jinja2/*
    */markupsafe/*
    */setup.py
    */conf.py
    */embed_jinja.py


[coverage:paths]
source =
    src
    .tox/*/site-packages
    .tox/*/bin


[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    assert False
    if False:
    if __name__ == .__main__.:


[doc8]
max-line-length = 120
verbose = 1


[mypy]
# Python version is not specified to allow checking against different versions
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
check_untyped_defs = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
show_error_context = True
mypy_path = src


[mypy-pydsdl]
ignore_missing_imports = True


[mypy-nunavut.jinja.jinja2.*]
follow_imports = skip


[mypy-pytest.*]
ignore_missing_imports = True


[mypy-sybil.*]
ignore_missing_imports = True


[nunavut.lang.c]
extension=.hc
option_not_in_properties = This is a test


# +---------------------------------------------------------------------------+
# | TOX ENVIRONMENTS
# +---------------------------------------------------------------------------+


[testenv]
usedevelop = true
setenv =
    PYTHONDONTWRITEBYTECODE=1
    PYTHONPATH={toxinidir}/test

passenv =
    BUILDKITE
    BUILDKITE_*
    PYPI_PASSWORD
    SONARQUBE_TOKEN
    NUNAVUT_MAJOR_MINOR_VERSION
    NUNAVUT_FULL_VERSION

deps = 
    test: pyyaml
    test,nnvg,doctest: {[base]deps}

commands = 

    nnvg: coverage run \
    nnvg:        -m nunavut \
    nnvg:        -O {envtmpdir} \
    nnvg:        --target-language cpp \
    nnvg:        -v \
    nnvg:        --dry-run \
    nnvg:        {toxinidir}/submodules/public_regulated_data_types/uavcan

    test: coverage run \
    test:    -m pytest {posargs} --basetemp={envtmpdir} -p "no:cacheprovider" \
    test:    --rootdir={toxinidir} \
    test:    {toxinidir}/test

    doctest: coverage run \
    doctest:    -m pytest {posargs} --basetemp={envtmpdir} -p "no:cacheprovider" \
    doctest:    --rootdir={toxinidir} \
    doctest:    {toxinidir}/src


[testenv:docs]
basepython = python3.7
deps = -rrequirements.txt

commands =
    sphinx-build -b html {toxinidir} {envtmpdir}


[testenv:gen-apidoc]
basepython = python3.7
whitelist_externals = rm
deps =
    sphinx-autoapi

commands =
    rm -rf {toxinidir}/docs/api
    sphinx-apidoc \
        --doc-project library \
        --no-headings \
        --output-dir {toxinidir}/docs/api \
        --ext-autodoc \
        --ext-intersphinx \
        src \
        "**/conftest.py" \
        "src/nunavut/jinja/jinja2/**" \
        "src/nunavut/jinja/markupsafe/**"


[testenv:noyaml]
# Sanity check that nunavut can run without pyyaml installed.
basepython = python3.7
deps = 
    {[base]deps}

commands = 
    coverage run \
        -m nunavut \
            -O {envtmpdir} \
            --target-language cpp \
            -v \
            {toxinidir}/submodules/public_regulated_data_types/uavcan


[testenv:report]
basepython = python3.7
deps = coverage
skip_install = true
commands =
    coverage combine --append
    coverage html -d {envtmpdir}
    coverage xml -o {envtmpdir}/coverage.xml


[testenv:mypy]
basepython = python3.7
deps = 
    mypy
    lxml

skip_install = true
commands =
    mypy -m nunavut \
         -m nunavut.jinja \
         -m nunavut.lang \
         -m nunavut.lang.cpp \
         -m nunavut.lang.c \
         -m nunavut.lang.py \
         -m nunavut.lang.js \
        --cache-dir {envtmpdir} \
        --txt-report {envtmpdir}/mypy-report-lib \
        --config-file {toxinidir}/tox.ini


[testenv:lint]
basepython = python3.7
skip_install = true
deps =
    flake8
    doc8

commands = 
    flake8 --benchmark --tee --output-file={envtmpdir}/flake8.txt --filename=*.py --exclude=**/jinja2/*,**/markupsafe/* src
    doc8 {toxinidir}/docs


[testenv:package]
basepython = python3.7
deps = 
    wheel
    twine

commands = 
    python setup.py \
        sdist -d {toxworkdir}/package/dist \
        bdist_wheel -d {toxworkdir}/package/dist \
                    -b {envtmpdir}/tmp \
                    -k \
                    --build-number {env:BUILDKITE_BUILD_NUMBER:0}
    twine check {toxworkdir}/package/dist/*


[testenv:sonar]
basepython = python3.7
whitelist_externals = sonar-scanner

commands=
    sonar-scanner \
        -Dsonar.login={env:SONARQUBE_TOKEN:} \
        -Dsonar.buildString={env:BUILDKITE_BUILD_NUMBER:0} \
        -Dsonar.projectVersion={env:NUNAVUT_MAJOR_MINOR_VERSION:0} \
        -Dsonar.working.directory={envtmpdir}/.scannerwork


[testenv:upload]
basepython = python3.7
skip_install = true
deps = 
    twine

commands = 
    twine upload -u __token__ -p {env:PYPI_PASSWORD:} {toxworkdir}/package/dist/*


[testenv:local]
usedevelop = true
deps =
    {[base]deps}
    {[dev]deps}
    {[testenv:docs]deps}
    {[testenv:mypy]deps}
    {[testenv:lint]deps}
