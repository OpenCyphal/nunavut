#
# We test nunavut using python 3.5 - 3.8.
#
# The standard version to develop against is 3.7. We limit mypy checking
# to 3.7 since typing is still a bit fluid accross versions.
#
[tox]
envlist = {py35,py36,py37,py38}-{test,nnvg},noyaml,lint,mypy,report,docs,package


[testenv]
setenv =
    PYTHONDONTWRITEBYTECODE=1
    PYTHONPATH={toxinidir}/test

passenv =
    BUILDKITE
    BUILDKITE_*
    PYPI_PASSWORD
    SONARQUBE_TOKEN
    NUNAVUT_MAJOR_MINOR_VERSION
    NUNAVUT_FULL_VERSION

deps = 
    test: pyyaml
    test: Sybil
    test,nnvg: pydsdl>=0.5.0
    test,nnvg: pytest
    test,nnvg: coverage

commands = 

    nnvg: coverage run --parallel-mode --rcfile={toxinidir}/setup.cfg \
    nnvg:       -m nunavut \
    nnvg:        -O {envtmpdir} \
    nnvg:        --target-language cpp \
    nnvg:        -v \
    nnvg:        --dry-run \
    nnvg:        {toxinidir}/submodules/public_regulated_data_types/uavcan

    test: coverage run --parallel-mode --rcfile={toxinidir}/setup.cfg \
    test:    -m pytest {posargs} --basetemp={envtmpdir} -p "no:cacheprovider" \
    test:    --rootdir={toxinidir} {toxinidir}/test {posargs}

[testenv:docs]
basepython = python3.7
deps = 
    pydsdl>=0.5.0
    sphinx >= 1.8.5
    sphinx-argparse
    sphinx_rtd_theme

commands =
    sphinx-build -b html {toxinidir} {envtmpdir}


[testenv:noyaml]
# Sanity check that nunavut can run without pyyaml installed.
basepython = python3.7
deps = 
    pydsdl>=0.5.0
    pytest
    coverage

commands = 
    coverage run --parallel-mode --rcfile={toxinidir}/setup.cfg \
        -m nunavut \
            -O {envtmpdir} \
            --target-language cpp \
            -v \
            {toxinidir}/submodules/public_regulated_data_types/uavcan

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage combine --append --rcfile={toxinidir}/setup.cfg
    coverage html --rcfile={toxinidir}/setup.cfg -d {envtmpdir}
    coverage xml --rcfile={toxinidir}/setup.cfg -o {envtmpdir}/coverage.xml

[testenv:mypy]
basepython = python3.7
deps = 
    mypy
    lxml

skip_install = true
commands =
    mypy -m nunavut \
         -m nunavut.jinja \
         -m nunavut.lang \
        --cache-dir {envtmpdir} \
        --txt-report {envtmpdir}/mypy-report-lib \
        --config-file {toxinidir}/setup.cfg

[testenv:lint]
basepython = python3.7
skip_install = true
deps =
    flake8
    doc8

commands = 
    flake8 --benchmark --tee --output-file={envtmpdir}/flake8.txt --filename=*.py --exclude=**/jinja2/*,**/markupsafe/* src
    doc8 {toxinidir}/docs

[testenv:package]
basepython = python3.7
deps = 
    wheel
    twine

commands = 
    python setup.py \
        sdist -d {toxworkdir}/package/dist \
        bdist_wheel -d {toxworkdir}/package/dist \
                    -b {envtmpdir}/tmp \
                    -k \
                    --build-number {env:BUILDKITE_BUILD_NUMBER:0}
    twine check {toxworkdir}/package/dist/*


[testenv:sonar]
basepython = python3.7
whitelist_externals = sonar-scanner

commands=
    sonar-scanner \
        -Dsonar.login={env:SONARQUBE_TOKEN:} \
        -Dsonar.buildString={env:BUILDKITE_BUILD_NUMBER:0} \
        -Dsonar.projectVersion={env:NUNAVUT_MAJOR_MINOR_VERSION:0} \
        -Dsonar.working.directory={envtmpdir}/.scannerwork


[testenv:upload]
basepython = python3.7
skip_install = true
deps = 
    twine

commands = 
    twine upload -u __token__ -p {env:PYPI_PASSWORD:} {toxworkdir}/package/dist/*
