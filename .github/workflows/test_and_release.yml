name: test and release CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    container: uavcan/toxic:py35-py39-sq
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: tox
      run: |
        tox -e lint,mypy,docs
        tox -e py39-rstdoctest
  test:
    runs-on: ubuntu-latest
    needs: lint
    container: uavcan/toxic:py35-py39-sq
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: tox
      run: tox -e py39-nnvg,py39-test,py39-doctest,report
    - name: upload
      uses: actions/upload-artifact@v2
      with:
        name: report
        path: .tox/report/tmp/*
    - name: sonar
      if: ${{ github.event_name == 'pull_request' }}
      env:
        SONARQUBE_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
      run: tox -e sonar | grep -v "sonar.login"
  compat-test:
    runs-on: ubuntu-latest
    needs: lint
    container: uavcan/toxic:py35-py39-sq
    strategy:
      matrix:
        python_version: [py35, py36, py37, py38]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: tox
      run: tox -e ${{ matrix.python_version }}-nnvg,${{ matrix.python_version }}-test,report
  language-verification-c:
    runs-on: ubuntu-latest
    needs: [test, compat-test]
    container: uavcan/c_cpp:ubuntu-20.04
    strategy:
      matrix:
        build_type: [Debug, Release, MinSizeRel]
        architecture: [native32, native64]
        compiler: [gcc, clang]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: verify
      run: .github/verify.py --override .github/verify_global.ini --override .github/verify_c_${{ matrix.compiler }}_${{ matrix.architecture }}.ini --build-type ${{ matrix.build_type }}
  language-verification-cpp:
    runs-on: ubuntu-latest
    needs: [test, compat-test]
    container: uavcan/c_cpp:ubuntu-20.04
    strategy:
      matrix:
        build_type: [Debug, Release, MinSizeRel]
        architecture: [native32, native64]
        compiler: [gcc, clang]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: verify
      run: .github/verify.py --override .github/verify_global.ini --override .github/verify_cpp_${{ matrix.compiler }}_${{ matrix.architecture }}.ini --build-type ${{ matrix.build_type }}
  release:
    if: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' && github.repository == 'UAVCAN/nunavut' }}
    runs-on: ubuntu-latest
    needs: [language-verification-cpp, language-verification-c]
    container: uavcan/toxic:py35-py39-sq
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: false
    - name: set-environment
      run: |
        echo NUNAVUT_FULL_VERSION=$(./.github/verify.py --version-only) >> $GITHUB_ENV
        echo NUNAVUT_MAJOR_MINOR_VERSION=$(./.github/verify.py --major-minor-version-only) >> $GITHUB_ENV
    - name: download
      uses: actions/download-artifact@v2
      with:
        name: report
    - name: upload
      env:
        PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        SONARQUBE_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
      run: |
        echo "About to release nunavut version ${{ env.NUNAVUT_FULL_VERSION }} (build ${{ env.GITHUB_RUN_ID }})"
        tox -e package
        tox -e sonar | grep -v "sonar.login"
        tox -e upload | grep -v "twine upload"
