[metadata]
name = nunavut
author = UAVCAN Development Team
author_email = dixonsco@amazon.com
url = https://uavcan.org
description = Generate code from DSDL using Jinja2 templates.
long_description = file: README.rst
long_description_content_type = text/x-rst
license = MIT
license_file = LICENSE.rst
keywords = uavcan, dsdl, can, can-bus, codegen, 
classifiers =
    Development Status :: 3 - Alpha
    Environment :: Console
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3 :: Only
    Topic :: Scientific/Engineering
    Topic :: Software Development :: Embedded Systems
    Topic :: Software Development :: Libraries
    Topic :: Software Development :: Code Generators
    Topic :: Software Development :: Build Tools
    Topic :: System :: Distributed Computing
    Topic :: System :: Networking
    Typing :: Typed

[options]
package_dir=
    =src
packages=find:
install_requires=
    pydsdl ~= 1.1
zip_safe = False

python_requires = >=3.5

[options.entry_points]
console_scripts =
    nnvg = nunavut.__main__:main

[options.packages.find]
where=src

[mypy]
# Python version is not specified to allow checking against different versions
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
check_untyped_defs = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
show_error_context = True
mypy_path = src

[mypy-pydsdl]
ignore_missing_imports = True

[mypy-nunavut.jinja.jinja2.*]
follow_imports = skip

[flake8]
max-complexity = 10
max-line-length = 120
doctests = True
statistics = True
show-source = True

[tool:pytest]
log_cli = true
log_cli_level = WARNING
norecursedirs = submodules

[coverage:run]
data_file=.coverage
branch=True
parallel=True
include =
    src/nunavut/*
    .tox/*/site-packages/nunavut/*

omit = 
    */jinja2/*
    */markupsafe/*
    */setup.py
    */conf.py
    */embed_jinja.py


[coverage:paths]
source =
    src
    .tox/*/site-packages
    .tox/*/bin


[report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    assert False
    if False:
    if __name__ == .__main__.:

[doc8]
max-line-length = 120
verbose = 1
