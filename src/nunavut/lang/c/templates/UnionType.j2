{% extends "Header.j2" %}
{%- block object -%}
{% set composite_type = T -%}
{% include '_composite_type.j2' %}
{%- for field in composite_type.fields -%}
{%- if field is not padding %}

/// Tag a {{ composite_type | full_reference_name }} union as a {{ field.name }}.
/// Provides an encapsulated interface to set union tags prior to serialization.
static inline void {{ composite_type | full_reference_name }}_set_{{ field.name }}({{ composite_type | full_reference_name }}* const untagged_union_ptr)
{
    if (untagged_union_ptr != {{valuetoken_null}})
    {
        untagged_union_ptr->_tag_ = {{ loop.index0 }};
    }
}

/// Determine if a given {{ composite_type | full_reference_name }} tagged union is currently tagged as
/// {{ field.name }}. If so, then {{ composite_type | full_reference_name }}->{{ field.name }}
/// can be accessed safely.
static inline {{ typename_boolean }} {{ composite_type | full_reference_name }}_is_{{ field.name }}(const {{ composite_type | full_reference_name }}* const tagged_union_ptr)
{
    return ((tagged_union_ptr != {{ valuetoken_null }}) && tagged_union_ptr->_tag_ == {{ loop.index0 }});
}
{%- endif -%}
{%- endfor %}
{# must be included after member checking functions are declared #}
{% include '_serde_functions.j2' %}
{% include '_metadata.j2' %}
{% endblock -%}
